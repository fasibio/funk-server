variables:
   RAILS_ENV: test
   IMAGE_NAME: fasibio/funk_server
   SONAR_NAME: fasibio_funk_server_
   SONAR_HOST: https://sonar.server2.fasibio.de

# Unit and integration tests
test:
  stage: test
  only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
    - master
  services:
  - name: elasticsearch:7.2.0
    alias: elasticsearch
    command: ["bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node"]
  tags: 
    - dockerfasibio
  image: golang:1.12.8
  script:
   - echo "Sleeping for 15 seconds.."; sleep 15;
   - ELASTICSEARCH=http://elasticsearch:9200 go test -mod=vendor -short -tags=integration -coverprofile=cov.out
   - go tool cover -func cov.out  
  coverage: /^total:\t+\(statements\)\t+(\d+\.\d+)%/
  artifacts: 
   paths: 
     - ./cov.out

# sonar upload
uploadSonarqube: 
  image: ciricihq/gitlab-sonar-scanner
  stage: sonarqube
  script:
    - sonar-scanner -Dsonar.projectKey=${SONAR_NAME}${CI_COMMIT_REF_NAME} -Dsonar.sources=. -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=$sonarqubelogin
  only: 
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
    - master
  tags:
    - dockerfasibio
  artifacts: 
    paths: 
      - ./cov.out
 
# build binary
buildBin: 
   stage: buildBin
   only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
    - master
   tags:
     - dockerfasibio
   image: golang:1.12.8-alpine3.9
   script: 
     - apk add make
     - GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -installsuffix cgo -o funk_server .
   cache:
     paths:
       - funk_server

# build Docker Image for explizit versions and release candidates
buildImageTag: 
   stage: buildImage
   only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
   tags:
     - dockerfasibio
   image: docker
   cache:
     paths:
       - funk_server
   script: 
     - docker build --build-arg buildNumber=${CI_PIPELINE_IID} -t ${IMAGE_NAME}:${CI_COMMIT_REF_NAME} .

# push docker image to hub.docker.com for explizit versions and release candidates
publishTag: 
  stage: publish
  image: docker
  only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
  tags:
    - dockerfasibio
  script: 
    - docker login -u ${dockerhubuser} -p ${dockerhubpassword}
    - docker push ${IMAGE_NAME}:${CI_COMMIT_REF_NAME}

# build latest stable version of docker image 
buildImageMaster: 
   stage: buildImage
   only:
    - master
   tags:
     - dockerfasibio
   image: docker
   cache:
     paths:
       - funk_server
   script: 
     - docker build --build-arg buildNumber=${CI_PIPELINE_IID} -t ${IMAGE_NAME}:latest .

# publish latest stable version to hub.docker.com
publishMaster: 
  stage: publish
  image: docker
  only:
    - master
  tags:
    - dockerfasibio
  script: 
    - docker login -u ${dockerhubuser} -p ${dockerhubpassword}
    - docker push ${IMAGE_NAME}:latest


stages:
  - test
  - sonarqube
  - buildBin
  - buildImage
  - publish
